services:
  - docker:dind

stages:
  - test
  - build
  - deploy

# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 api

# # Run the unit tests
# api-unit-tests-job:
#   image: python:3-bullseye
#   stage: test
#   needs:
#     - lint-test-job
#   script:
#     - cd api
#     - pip install -r requirements.txt
#     - python -m pytest

# # Build API Image:
# build-api-image:
#   stage: build
#   image: docker:git
#   variables:
#     GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/api
#   before_script:
#     # $CI_JOB_TOKEN is variable automatically added by Gitlab: see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference
#     - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
#   script:
#     - docker build --tag $GITLAB_IMAGE:latest ./api
#     - docker push $GITLAB_IMAGE:latest
#   only:
#     - main

# Build the React/JavaScript front-end
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp -a dist/. public/
  artifacts:
    paths:
      - public

deploy-to-s3:
  stage: deploy
  image:
    name: amazon/aws-cli:latest
    entrypoint: [""]
  needs:
    - build-front-end-job
  script:
    - aws --version
    - aws s3 sync public s3://${AWS_S3_BUCKET} --delete
# # Deploy the React/JavaScript front-end to GitLab pages
# pages:
#   stage: deploy
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   dependencies:
#     - build-front-end-job
#   needs:
#     - build-front-end-job
#   script:
#     - mv ghi/build/ public
#   artifacts:
#     paths:
#       - public
